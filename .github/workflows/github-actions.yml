name: run integration testing

on:
  push:
    branches: [main]
  pull_request:
    branches: [main, dev]

jobs:
  integration-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    services:
      postgres:
        image: postgres:12-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      cache:
        image: redis
        env:
          REDIS_ARGS: "--requirepass password --user redis on >password ~* allcommands --user default off nopass nocommands"
        ports:
          - "8001:8001"
          - "6380:6379"
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install Dependencies
        run: yarn install --frozen-lockfile
      - name: Integration testing
        run: |
          yarn test
        env:
          JWT_SECRET_KEY: "4UO2T0Q0YR29LLHCDQ2L68I4SR5YQU"
          SALT: "$2b$10$9dmwqrsTlnIiE5ZQgy2Aqu"
          TYPEORM_CONNECTION: postgres
          TYPEORM_HOST: db
          TYPEORM_PORT: 5432
          TYPEORM_USERNAME: postgres
          TYPEORM_PASSWORD: postgres
          TYPEORM_DATABASE: postgres
